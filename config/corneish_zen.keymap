#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  | x |  Y  |  U   |  I  |  O  |  P  | ENT |
// | SHFT |  A  |  S  |  D  |  F  |  G  | x |  H  |  J   |  K  |  L  |  ;  |  '  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  | x |  N  |  M   |  ,  |  .  |  /  | ESC |
//                    | ALT | LWR | RSE | x | SPC | BKSP  | RSE |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I     &kp O   &kp P    &kp RET
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G    &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B    &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                      &kp LALT &mo 1 &mo 2    &kp SPACE &kp BSPC &mo 2
                        >;
                };

                lower_layer {
                        label = "LOWER";
// -----------------------------------------------------------------------------------------
// |  TAB |  ?  |  `  |  (  |  )  |  ~  | x | HOME | END  | {   |  }   | \|  | ENT |
// | SHFT |  !  |  %  |  -  |  _  |  =  | x | LEFT | DOWN | UP  | RGHT |  :  |  "  |
// | CTRL |  ^  |  $  |  #  |  +  |  *  | x |  [   |  ]   |  <  |  >   |  @  |  &  |
//                    | CAP |     | GUI | x | BKSP | DEL  |     |
                        bindings = <
   &kp  TAB  &kp QMARK &kp GRAVE &kp LPAR  &kp RPAR  &kp TILDE    &kp HOME &kp END  &kp LBRC &kp RBRC  &kp BSLH  &kp RET
   &kp LSHFT &kp EXCL  &kp PRCNT &kp MINUS &kp UNDER &kp EQUAL    &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp COLON &kp DQT
   &kp LCTRL &kp CARET &kp DLLR  &kp POUND &kp PLUS  &kp STAR     &kp LBKT &kp RBKT &kp LT   &kp GT    &kp AT    &kp AMPS
             	                   &kp CAPS  &trans    &kp LGUI     &kp BSPC &kp DEL  &trans
                        >;
                };

                raise_layer {
                        label = "UPPER";
// -----------------------------------------------------------------------------------------
// |  TAB | VolU |  7  |  8  |  9  | BrtU | x |     |     | PGUP | PGDN |     |      |
// | SHFT | VolD |  4  |  5  |  6  | BrtD | x |     |     |      |      |     |      |
// | CTRL | Mute |  1  |  2  |  3  | MOD  | x |     |     |      |      |     |      |
//                     | ALT |  0  |      | x |     |     |      |
                        bindings = <
   &kp TAB   &kp C_VOL_UP &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp C_BRI_UP     &trans &trans &kp PG_UP  &kp PG_DN  &trans &trans 
   &kp LSHFT &kp C_VOL_DN &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp C_BRI_DN     &trans &trans &trans     &trans     &trans &trans   
   &kp LCTRL &kp C_MUTE   &kp KP_N1  &kp KP_N2  &kp KP_N3  &mo 3            &trans &trans &trans     &trans     &trans &trans
                      	          &kp LALT   &kp KP_N0  &trans              &trans &trans &trans 
                        >;
                };

                func_layer {
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// |     | F12 | F7  | F8  | F9  |     | x |       |      |      |     |      |      |
// |     | F11 | F4  | F5  | F6  |     | x | BTCLR | BT1  | BT2  | BT3 | BT4  | BT5  |
// |     | F10 | F1  | F2  | F3  |     | x |       |      |      |     |      |      |
//                   |     |     |     | x |       |      |
                        bindings = <
   &trans &kp F12 &kp F7  &kp F8  &kp F9  &trans    &trans     &trans       &trans       &trans       &trans       &trans
   &trans &kp F11 &kp F4  &kp F5  &kp F6  &trans    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  
   &trans &kp F10 &kp F1  &kp F2  &kp F3  &trans    &trans     &trans       &trans       &trans       &trans       &trans
                      	  &trans  &trans  &trans    &trans     &trans       &trans
                        >;
                };

        };
};

